version: "3"

# volumes:
#   db:
#   logs:
name: rpa_backend
services:
  traefik:
    image: "traefik:v2.10"
    container_name: "traefik"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./ssl:/ssl"

  db:
    image: postgres:14
    restart: always
    env_file:
      - .env
    # volumes:
    #   - "db:/var/lib/postgresql/data"
    ports:
      - "5555:5432"
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 3s
      retries: 3

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env
    # volumes:
    #   - "logs:/data"
    ports:
      - "3333:3333"
    depends_on:
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.api.loadbalancer.server.port=3333"
      - "traefik.http.routers.api.rule=Host(`algakz.itatmisis.ru`)"
      #- "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.tls.certresolver=letsEncrypt"


